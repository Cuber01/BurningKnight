name: Build BurningKnight
on:
  push:
    branches:
      - release

jobs:
  build:
    name: Build BurningKnight
    runs-on: windows-2019
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install NuGet
      shell: powershell
      run: | 
        wget -O nuget.exe  https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

    - name: Install NuGet packages
      shell: bash
      run: |
        ls -l
        mkdir packages
        cd packages
        ./nuget.exe install ../Lens/packages.config
        ./nuget.exe install ../Aseprite/packages.config
        ./nuget.exe install ../BurningKnight/packages.config
        ./nuget.exe install ../Desktop/packages.config
        ls -l
        cd ..
    
    - name: Download MonoGame
      shell: powershell
      run: |
        dotnet --info
        wget -O MonoGameSetup.exe https://github.com/MonoGame/MonoGame/releases/download/v3.7.1/MonoGameSetup.exe
    
    - name: Install MonoGame
      run: |
        MonoGameSetup.exe /S

    - name: Building Aseprite Extention
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        ls -l
        "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" ./Lens.sln /target:Aseprite
        ls -l
    
    - name: Building Resources
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/BurningKnight/Content/
        "C:/Program Files (x86)/MSBuild/MonoGame/v3.0/Tools/MGCB.exe" "Content.mgcb" /platform:DesktopGL
        ls -l

    - name: Building Solution
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" ./Lens.sln /property:Configuration=Release
        mv -f -v $USERPROFILE/Desktop/bin/Release $GITHUB_WORKSPACE/Release
        cd Release
        ls
        cd ..
    
    - name: Upload release artifact
      uses: actions/upload-artifact@v1
      with:
        name: Release
        path: Release

